version: '3.8'
services:
  rabbitMQ:
    image: rabbitmq:4-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=${MQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${MQ_PASSWORD}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - weather-net

  db:
    image: postgres:17
    container_name: postgres
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "${DB_HOST_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}   
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - weather-net

  redis:
    image: redis:7
    container_name: redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "${REDIS_PORT}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - weather-net

  redis-commander:
    image: rediscommander/redis-commander:latest
    platform: linux/amd64
    container_name: redis_commander
    ports:
      - "${REDIS_COMMANDER_PORT}:8081"
    environment:
      - REDIS_HOSTS=weather_api:redis:${REDIS_PORT}:0:${REDIS_PASSWORD}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - weather-net

  app:
    container_name: weather_api
    image: valeriia/weather_api
    build: ./
    ports:
      - "${APP_PORT}:8000"
    depends_on:
      db:
        condition: service_healthy
        restart: true
      rabbitMQ: 
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - weather-net
      
volumes:
  db:
  
  redis-data:
    driver: local

networks:
  weather-net:
    external: true